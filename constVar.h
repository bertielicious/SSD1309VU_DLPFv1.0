/* 
 * File:   constVar.h
 * Author: User
 *
 * Created on 31 January 2024, 15:22
 */

#ifndef CONSTVAR_H
#define	CONSTVAR_H


// PIC16F1459 Configuration Bit Settings

// 'C' source line config statements

// CONFIG1
#pragma config FOSC = INTOSC    // Oscillator Selection Bits (INTOSC oscillator: I/O function on CLKIN pin)
#pragma config WDTE = OFF       // Watchdog Timer Enable (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable (PWRT disabled)
#pragma config MCLRE = ON       // MCLR Pin Function Select (MCLR/VPP pin function is MCLR)
#pragma config CP = OFF         // Flash Program Memory Code Protection (Program memory code protection is disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable (Brown-out Reset disabled)
#pragma config CLKOUTEN = OFF   // Clock Out Enable (CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin)
#pragma config IESO = OFF        // Internal/External Switchover Mode (Internal/External Switchover Mode is enabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enable (Fail-Safe Clock Monitor is enabled)

// CONFIG2
#pragma config WRT = OFF        // Flash Memory Self-Write Protection (Write protection off)
#pragma config CPUDIV = NOCLKDIV // CPU System Clock Selection Bit (CPU system clock divided by 6)
#pragma config USBLSCLK = 48MHz // USB Low SPeed Clock Selection bit (System clock expects 48 MHz, FS/LS USB CLKENs divide-by is set to 8.)
#pragma config PLLMULT = 3x     // PLL Multipler Selection Bit (3x Output Frequency Selected)
#pragma config PLLEN = DISABLED  // PLL Enable Bit (3x or 4x PLL Enabled)
#pragma config STVREN = ON      // Stack Overflow/Underflow Reset Enable (Stack Overflow or Underflow will cause a Reset)
#pragma config BORV = LO        // Brown-out Reset Voltage Selection (Brown-out Reset Voltage (Vbor), low trip point selected.)
#pragma config LPBOR = OFF      // Low-Power Brown Out Reset (Low-Power BOR is disabled)
#pragma config LVP = ON         // Low-Voltage Programming Enable (Low-voltage programming enabled)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include <stdint.h>
#include <stdio.h>
#include <stdbool.h>
#define _XTAL_FREQ 48000000
/***************Pin aliases*********/
//#define NAME  Replacement_Text
#define ADC PORTCbits.RC3   // ADC input pin 7
#define CS PORTCbits.RC6    //CS pin 8
#define DC PORTAbits.RA5    //DC pin 2
#define RST PORTAbits.RA4 //RESET pin 3
#define SDO PORTCbits.RC7 // SDO pin 9
#define SCK PORTBbits.RB6 // SCK pin 11
#define LED PORTCbits.RC4 // LED pin 6
#define _XTAL_FREQ 16000000

extern enum {LO, HI};  // LO = 0; HI = 1
extern int16_t adcVal= 0;

typedef struct{     // struct containing pixel  y coordinates from page = 0- 7 and yYval = 0-63
    uint8_t xVal;   // horizontal axis 0-127
    uint8_t page;   // page 0 - 7
    uint8_t yVal;  //  vertical axis from 0 - 63 (uses page data plus a byte from 1 - 63)
    uint8_t yByte;  // vertical axis position within page takes a value of 0 - 0x80
}pix;

const extern uint8_t newQuad[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0xe0,0xf8,0xfc,0xfe,0xfe,0xff,0xff,0xff,0x7f,0x3f,0x1f,
0x1f,0x1f,0x1f,0x1f,0x3f,0x7f,0xff,0xff,0xfe,0xfe,0xfc,0xf8,0xf0,0xe0,0x00,0x00,
0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,
0x00,0x00,0x00,0xc0,0xf0,0xf8,0xfc,0xfe,0xfe,0xff,0xff,0x7f,0x3f,0x1f,0x1f,0x1f,
0x1f,0x1f,0x1f,0x3f,0xff,0xff,0xff,0xff,0xfe,0xfc,0xfc,0xf0,0xc0,0x00,0x00,0x00,
0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,
0x7f,0x7f,0xff,0xfe,0xfe,0xfe,0xfc,0xfc,0xf8,0xf0,0xc0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,
0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,
0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x83,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,
0x00,0x00,0x00,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x80,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xf8,0xff,0xff,0xff,0xff,0xff,0x7f,0x1f,0x00,
0x00,0x00,0x00,0x00,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,
0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3f,0x1f,0x1f,0x1f,0x1f,0x1f,
0x1f,0x1f,0x1f,0x1f,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x80,0xc0,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x07,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x07,0x0f,0x1f,0x3f,0x3f,0x7f,0x7f,0x7f,0xfe,0xfe,0xfc,
0xfc,0xfc,0xfc,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0xf8,0xfc,0xfc,0xfc,
0xfc,0xfc,0xfc,0xfc,0x00,0x01,0x0f,0x1f,0x3f,0x7f,0x7f,0x7f,0xff,0xff,0xfe,0xfc,
0xfc,0xfc,0xfc,0xfc,0xfc,0xfe,0xff,0x7f,0x7f,0x7f,0x3f,0x1f,0x0f,0x07,0x01,0x00,
0x00,0x00,0x40,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xff,0x7f,0x7f,0xff,0x7f,0xff,0xff,0xff,0x00,0x00,0x00,
0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfc,0xfc,0xfc,0xfe,0xfe,0x7e,
0x7e,0x7f,0x7f,0x7f,0x7f,0x3f,0x3f,0x1f,0x0f,0x07,0x03,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

const  int16_t sineLookUp[] = /// sin(degress) *255, -90 <= sin(degrees)<= +90
 { -255,    //-90 deg sin (-90) = -1
    -254,
    -254,
    -254,
    -254,
    -254,
    -253,
    -253,
    -252,
    -251,
    -251,
    -250,
    -249,
    -248,
    -247,
    -246,
    -245,
    -243,
    -242,
    -241,
    -239,
    -238,
    -236,
    -234,
    -232,
    -231,
    -229,
    -227,
    -225,
    -223,
    -220,
    -218,
    -216,
    -213,
    -211,
    -208,
    -206,
    -203,
    -200,
    -198,
    -195,
    -192,
    -189,
    -186,
    -183,
    -180,   //-45 deg sin(-45) = -0.707
    -177,
    -173,
    -170,
    -167,
    -163,
    -160,
    -156,
    -153,
    -149,
    -146,
    -142,
    -138,
    -135,
    -131,
    -127,
    -123,
    -119,
    -115,
    -111,
    -107,
    -103,
    -99,
    -95,
    -91,
    -87,
    -83,
    -78,
    -74,
    -70,
    -65,
    -61,
    -57,
    -53,
    -48,
    -44,
    -39,
    -35,
    -31,
    -26,
    -22,
    -17,
    -13,
    -8,
    -4,
    0,      // 0 deg
    4,
    8,
    13,
    17,
    22,
    26,
    31,
    35,
    39,
    44,
    48,
    53,
    57,
    61,
    65,
    70,
    74,
    78,
    83,
    87,
    91,
    95,
    99,
    103,
    107,
    111,
    115,
    119,
    123,
    127,
    131,
    135,
    138,
    142,
    146,
    149,
    153,
    156,
    160,
    163,
    167,
    170,
    173,
    177,   
    180,     //+135 deg = +0.707
    183,
    186,
    189,
    192,
    195,
    198,
    200,
    203,
    206,
    208,
    211,
    213,
    216,
    218,
    220,
    223,
    225,
    227,
    229,
    231,
    232,
    234,
    236,
    238,
    239,
    241,
    242,
    243,
    245,
    246,
    247,
    248,
    249,
    250,
    251,
    251,
    252,
    253,
    253,
    254,
    254,
    254,
    254,
    254,
    255};   // +180 deg = 0

const int16_t cosineLookUp[] = // cos(degress) *255, -90 <= cos(degrees)<= +90
 {0,
    4,
    8,
    13,
    17,
    22,
    26,
    31,
    35,
    39,
    44,
    48,
    53,
    57,
    61,
    65,
    70,
    74,
    78,
    83,
    87,
    91,
    95,
    99,
    103,
    107,
    111,
    115,
    119,
    123,
    127,
    131,
    135,
    138,
    142,
    146,
    149,
    153,
    156,
    160,
    163,
    167,
    170,
    173,
    177,
    180,
    183,
    186,
    189,
    192,
    195,
    198,
    200,
    203,
    206,
    208,
    211,
    213,
    216,
    218,
    220,
    223,
    225,
    227,
    229,
    231,
    232,
    234,
    236,
    238,
    239,
    241,
    242,
    243,
    245,
    246,
    247,
    248,
    249,
    250,
    251,
    251,
    252,
    253,
    253,
    254,
    254,
    254,
    254,
    254,
    255,
    254,
    254,
    254,
    254,
    254,
    253,
    253,
    252,
    251,
    251,
    250,
    249,
    248,
    247,
    246,
    245,
    243,
    242,
    241,
    239,
    238,
    236,
    234,
    232,
    231,
    229,
    227,
    225,
    223,
    220,
    218,
    216,
    213,
    211,
    208,
    206,
    203,
    200,
    198,
    195,
    192,
    189,
    186,
    183,
    180,
    177,
    173,
    170,
    167,
    163,
    160,
    156,
    153,
    149,
    146,
    142,
    138,
    135,
    131,
    127,
    123,
    119,
    115,
    111,
    107,
    103,
    99,
    95,
    91,
    87,
    83,
    78,
    74,
    70,
    65,
    61,
    57,
    53,
    48,
    44,
    39,
    35,
    31,
    26,
    22,
    17,
    13,
    8,
    4,
    0 };
        
#endif	/* CONSTVAR_H */

